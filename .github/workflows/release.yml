name: build

on:
  push:
    tags:
      - '*'

jobs:
  build-rotateproxy:
    runs-on: ubuntu-18.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.0
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build RotateProxy
        run: |
          mkdir -p "$HOME/.bin"
          echo 'ZIG_LOCAL_CACHE_DIR="$HOME/tmp" zig cc $@' > "$HOME/.bin/zcc" && chmod +x "$HOME/.bin/zcc"
          echo 'ZIG_LOCAL_CACHE_DIR="$HOME/tmp" zig c++ $@' > "$HOME/.bin/zxx" && chmod +x "$HOME/.bin/zxx"
          export PATH=$PATH:"$HOME/.bin"
          mkdir -p build
          cd cmd/rotateproxy
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC="zcc -target x86_64-linux-musl" CXX="zxx -target x86_64-linux-musl" go build -o '../../build/rotateproxy-linux-amd64' -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
          CGO_ENABLED=1 GOOS=linux GOARCH=386 CC="zcc -target i386-linux-musl" CXX="zxx -target i386-linux-musl" go build -o '../../build/rotateproxy-linux-i386' -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC="zcc -target x86_64-windows-gnu" CXX="zxx -target x86_64-windows-gnu" go build -o '../../build/rotateproxy-windows-amd64.exe' -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
          CGO_ENABLED=1 GOOS=windows GOARCH=386 CC="zcc -target i386-windows-gnu" CXX="zxx -target i386-windows-gnu" go build -o '../../build/rotateproxy-windows-i386.exe' -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
          CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 CC="zcc -target x86_64-macos-gnu" CXX="zxx -target x86_64-macos-gnu" go build -o '../../build/rotateproxy-darwin-amd64' -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
