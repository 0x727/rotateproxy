name: build

on:
  push:
    tags:
      - '*'

jobs:
  build-rotateproxy:
    runs-on: ubuntu-18.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.0
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Build RotateProxy
        run: |
          mkdir -p "$HOME/.bin"
          export PATH=$PATH:"$HOME/.bin"
          touch "$HOME/.bin/zcc" && touch "$HOME/.bin/zxx"
          chmod +x "$HOME/.bin/zcc" && chmod +x "$HOME/.bin/zxx"
          mkdir -p build
          cd cmd/rotateproxy

          configs=(
            'linux amd64 x86_64-linux-musl'
            'linux 386 i386-linux-musl'
            'windows amd64 x86_64-windows-gnu'
            'windows 386 i386-windows-gnu'
            'darwin amd64 x86_64-macos-gnu'
          )
          IFS=$'\n'
          for i in ${configs[@]}
          do
            IFS=$' '
            config=($i)
            goos=${config[0]}
            goarch=${config[1]}
            libc=${config[2]}
            ext=''
            if [ "${goos}" = "windows" ];then
              ext='.exe'
            fi
            echo "goos: ${goos}  goarch: ${goarch}  libc: ${libc}"
            echo '#!/bin/sh' > "$HOME/.bin/zcc"
            echo '#!/bin/sh' > "$HOME/.bin/zxx"
            echo 'ZIG_LOCAL_CACHE_DIR="$HOME/tmp" zig cc -target '${libc}' $@' >> "$HOME/.bin/zcc"
            echo 'ZIG_LOCAL_CACHE_DIR="$HOME/tmp" zig c++ '${libc}' $@' >> "$HOME/.bin/zxx"
            CGO_ENABLED=1 GOOS="${goos}" GOARCH="${goarch}" CC="zcc" CXX="zxx" go build -o "../../build/rotateproxy-${goos}-${goarch}${ext}" -trimpath -ldflags="-linkmode=external -extldflags=-static -s -w"
          done
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
